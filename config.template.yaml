general:
  tempfolder: c:\temp

# Defined a list of downloaders.
# Each downloader downloads from one server to a local folder.
# Source file downloaded will be removed from sftp server
# The source specify the server name used in the
# servers section.
downloaders:
  - name: localtest1
    source: server1
    # do not start with ./
    sourcepath: for-download1
    targetpath: C:\Users\Downloads\ugoku-output1
    worker: 1
    # maximum timeout in seconds for downloading one file, if not defined default to 600s
    maxtimeout: 600
    # estimated throughput in Mbps (megabits/second), for calculating dynamic throughput
    # app will use smaller value of the two: max timeout and calculated value
    # if not defined, default is 10Mbps
    throughput: 10
    enabled: true
  - name: localtest2
    source: server2
    # do not start with ./
    sourcepath: for-download2
    targetpath: C:\Users\Downloads\ugoku-output2
    worker: 1
    # maximum timeout in seconds for downloading one file, if not defined default to 600s
    maxtimeout: 600
    # estimated throughput in Mbps (megabits/second), for calculating dynamic throughput
    # app will use smaller value of the two: max timeout and calculated value
    # if not defined, default is 10Mbps
    throughput: 10
    enabled: false

# Each uploader uploads from a local folder (could be nested)
# to a server, mirroring the folder structure.
# Source file uploaded will be removed from local folder
# The target specify the server name used in the servers section
uploaders:
  - name: uploader1
    target: server1
    sourcepath: C:\Users\Downloads\ugoku\input
    # do not start with ./
    targetpath: for-upload
    worker: 1
    # maximum timeout in seconds for uploading one file, if not defined default to 600s
    maxtimeout: 600
    # estimated throughput in Mbps (megabits/second), for calculating dynamic throughput
    # app will use smaller value of the two: max timeout and calculated value
    # if not defined, default is 50Mbps
    throughput: 10
    enabled: true

# Each syncer sync from a source to a target,
# without remove source files, unlike downloader/uploader.
# It can sync from serve to local or local to server.
# Two way sync is planned for as well
syncers:
  - name: synctest
    server: server1
    serverpath: for-sync
    localpath: C:\Users\Downloads\ugoku\sync
    # mode can one of these, default to server
    # - server: sync from server to local only
    # - local: sync from local to server only
    # - twoway: sync both way
    mode: server
    # scan interval in seconds
    sleepinterval: 10
    worker: 1
    enabled: true

# Streamer streams files from source sftp server to another
# sftp server, with ugoku as the bridge, without writing
# any file locally. That is is to say this is not a store and
# forward mechanism.
streamers:
  - name: streamtest
    source: server1
    sourcepath: for-stream-in
    target: server2
    targetpath: for-stream-out
    sleepinterval: 60
    worker: 1
    enabled: true

# each server is a unique combination of
# ip, user, and password
# you need another server config for another user
# even its for the same ip
servers:
  - name: server1
    ip: 192.168.1.1
    port: 22
    user: user
    password: Password
    # key file to use, if both key file and
    # password defined, key file will be used
    keyfile: id_rsa
  - name: server2
    ip: 192.168.1.2
    port: 22
    user: user
    password: Password
    keyfile: id_rsa
